@using Sandbox;
@using Sandbox.UI;
@inherits Panel
@attribute [StyleSheet]


<root class="@(Visible ? "" : "hidden")">
	@if (Player.Local is not null)
	{
		@if (Player.Local.TeamComponent.TeamName == Team.Props.ToString() || Player.Local.TeamComponent.TeamName ==
				Team.Unassigned.ToString())
		{
			<div>
				<div>Turn into Prop</div>
				<img class="input-glyph" src="@Use?.ResourcePath">
			</div>
		}
		<div>
			<div>Attack</div>
			<img class="input-glyph" src="@Attack1?.ResourcePath">
		</div>
		<div>
			<div>Toggle Rotation Lock</div>
			<img class="input-glyph" style="background-color: @(Player.Local.FreeLooking ? "gray" : "rgba(0, 0, 0, 0)")"
				src="@Attack2?.ResourcePath">
		</div>
		<div>
			<div>Grab</div>
			<img class="input-glyph" src="@Grab?.ResourcePath">
		</div>
		<div>
			<div>Flashlight</div>
			<img class="input-glyph" src="@Menu?.ResourcePath"/>
		</div>
		<div>
			<div>Taunt</div>
			<img class="input-glyph" src="@Taunt?.ResourcePath">
		</div>
		@if (Player.Local.TeamComponent.TeamName == Team.Props.ToString() ||
				Player.Local.TeamComponent.TeamName == Team.Unassigned.ToString())
		{
			<div>
				<div>Exit Prop</div>
				<img class="input-glyph" src="@LeaveProp?.ResourcePath">
			</div>
		}
		<div>
			<div>Toggle Third Person</div>
			<img class="input-glyph" src="@Toggle3rdPerson?.ResourcePath">
		</div>
		@if (Input.UsingController)
		{
			<div>
				<div>Run</div>
				<img class="input-glyph" src="@ControllerSprint?.ResourcePath">
			</div>


		}
		@if (Input.UsingController && (Player.Local.TeamComponent.TeamName == Team.Hunters.ToString() ||
				Player.Local.TeamComponent.TeamName == Team.Unassigned.ToString()))
		{
			<div>
				<div>Next Weapon</div>
				<img class="input-glyph" src="@DPadEast?.ResourcePath">
			</div>
			<div>
				<div>Previous Weapon</div>
				<img class="input-glyph" src="@DPadWest?.ResourcePath">
			</div>
		}
		<div>
			<div style="color: gray; text-shadow: 0 0 0 0;">Press Y to hide this!</div>
		</div>
	}
</root>

@code {

	public bool Visible { get; set; } = true;

	public Texture Use { get; set; }
	public Texture Menu { get; set; }
	public Texture Attack1 { get; set; }
	public Texture Attack2 { get; set; }
	public Texture Grab { get; set; }
	public Texture Taunt { get; set; }
	public Texture LeaveProp { get; set; }
	public Texture DPadEast { get; set; }
	public Texture DPadWest { get; set; }
	public Texture ControllerSprint { get; set; }
	public Texture Toggle3rdPerson { get; set; }

	public override void Tick()
	{
		Use = Input.GetGlyph("use", InputGlyphSize.Large, false);
		Menu = Input.GetGlyph("Menu", InputGlyphSize.Large, false);
		Attack1 = Input.GetGlyph("Attack1", InputGlyphSize.Large, false);
		Attack2 = Input.GetGlyph("Attack2", InputGlyphSize.Large, false);
		Grab = Input.GetGlyph("Flashlight", InputGlyphSize.Large, false);
		Taunt = Input.GetGlyph("Taunt", InputGlyphSize.Large, false);
		LeaveProp = Input.GetGlyph("View", InputGlyphSize.Large, false);
		Toggle3rdPerson = Input.GetGlyph("toggle3rdperson", InputGlyphSize.Large, false);
		if (Input.UsingController)
		{
			DPadEast = Input.GetGlyph("nextweapon", InputGlyphSize.Large, false);
			DPadWest = Input.GetGlyph("prevweapon", InputGlyphSize.Large, false);
			ControllerSprint = Input.GetGlyph("run", InputGlyphSize.Large, false);

		}
		base.Tick();

		if (Input.Pressed("light"))
		{
			Visible = !Visible;
		}
	}

	protected override int BuildHash() => System.HashCode.Combine(Time.Now);
}
