@using System.Threading.Tasks
@using Sandbox.UI

@inherits Panel

<root>
    <div class="card-image" style="background-image: url( @BackgroundImage )" />

    <div class="information">
        @if (MapPackage is not null)
        {
            <div class="title" @onclick=@( () => Game.Overlay.ShowPackageModal( MapPackage.FullIdent ) )>@MapPackage.Title</div>

            <div class="credit">
                <span>from</span>
                <label class="orgname">@MapPackage.Org.Title</label>
            </div>

            <div class="meta">
                <div><i>person</i>@MapPackage.Usage.Total.Users.KiloFormat()</div>
                <div class="favourite"><i>favorite</i>@MapPackage.Favourited.KiloFormat()</div>

                @if (MapPackage.Interaction.Used)
                {
                    <div tooltip="Amount of hours you've played"><i>alarm</i> @FormatHoursPlayed()</div>
                }
            </div>
        }
        else
        {
            <div class="title">@MapIdent</div>
        }
    </div>

    <div class="button" onclick="@OnMapClicked">
        <span>Change..</span>
    </div>
</root>

@code
{
    public string MapIdent { get; set; }

    public Action OnClicked { get; set; }

    public Package MapPackage { get; set; }

    public string BackgroundImage => MapPackage?.Thumb;

    protected override async Task OnParametersSetAsync()
    {
        MapPackage = await Package.FetchAsync(MapIdent, true);
    }

    string MapTitle => MapPackage?.Title ?? MapIdent;

    string FindBackgroundImage()
    {
        return MapPackage?.Thumb ?? "";
    }

    void OnMapClicked()
    {
        OnClicked?.Invoke();
    }

    public string FormatHoursPlayed()
    {
        double minutes = MapPackage.Interaction.Seconds / 60.0;

        if (minutes < 60)
            return minutes.ToString("0m");

        double hours = MapPackage.Interaction.Seconds / 60.0 / 60.0;

        if (hours > 10)
            return hours.ToString("0h");

        return hours.ToString("0.#h");
    }

    protected override int BuildHash() => HashCode.Combine(MapPackage, MapIdent);
}
